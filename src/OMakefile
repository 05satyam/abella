################################################
# OCaml Flags
#

OCAML_OTHER_LIBS = unix
OCAMLINCLUDES += $(dir . ndcore ext)

OUNIT = $(file ext/oUnit)

.SUBDIRS: ndcore ext
    if $(file-exists OMakefile)
       include OMakefile

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
OCamlGeneratedFiles(parser.ml lexer.ml)

################################################
# Build an OCaml program
#

NDCORE_FILES[] =
    ndcore/term
    ndcore/unify

FILES[] =
    lppterm
    parser
    lexer
    tactics
    prover
    context
    types

MAIN = main

TEST_FILES[] =
    test_helper
    $(rootname $(find . -name *_test.ml))
    test

TEST = unit_test

.PHONY: test
test: $(OCamlProgram $(TEST), $(OUNIT) $(NDCORE_FILES) $(FILES) $(TEST_FILES))
    ./$(TEST) -verbose

.PHONY: lpp
lpp: $(OCamlProgram lpp, $(NDCORE_FILES) $(FILES) $(MAIN))

.PHONY: clean
clean:
   rm $(filter-proper-targets $(ls R, .))

THM = cut
.PHONY: $(THM)
$(THM): $(THM).mod $(THM).thm lpp
    ./lpp $(THM).mod < $(THM).thm
