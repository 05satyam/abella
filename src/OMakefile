################################################
# OCaml Flags
#

OCAML_OTHER_LIBS = unix str
OCAMLINCLUDES += $(dir ext)
BYTE_ENABLED = true

OUNIT = $(file ext/oUnit)

.SUBDIRS: ext
    if $(file-exists OMakefile)
       include OMakefile


################################################
# Main Program
#

OCamlGeneratedFiles(parser.ml lexer.ml)

FILES[] =
    term
    unify
    metaterm
    parser
    lexer
    tactics
    prover
    context
    types
    extensions

MAIN = main

OCamlProgram(abella, $(FILES) $(MAIN))


################################################
# Unit Testing
#

TEST_FILES[] =
    test_helper
    $(rootname $(find . -name *_test.ml))
    test

TEST = unit_test

.PHONY: test
test: $(OCamlProgram $(TEST), $(OUNIT) $(FILES) $(TEST_FILES))
    ./$(TEST) -verbose


################################################
# File Testing
#

THM_FILES[] = $(rootname $(find . -name *.thm))

foreach(thm, $(THM_FILES))
    .PHONY: $(thm)
    $(thm): $(thm).mod $(thm).thm abella$(EXE)
        ./abella $(thm).mod -f $(thm).thm

.PHONY: theorems
theorems: abella$(EXE) $(addsuffix .thm, $(THM_FILES)) \
                    $(addsuffix .mod, $(THM_FILES))
    foreach(thm, $(THM_FILES))
        ./abella $(thm).mod -q -f $(thm).thm


################################################
# Utilites
#

.PHONY: clean
clean:
   rm $(filter-proper-targets $(ls R, .))

