%% Transitivity for the algorithm Fsub
%% [Work in progress]

Def ctx nil.
Def ctx (var X :: L) :- ctx L.

Theorem no_wf_ctx : forall A T L,
  ctx L -> member (wf A T) L -> false.
induction on 1. intros. case H1.
  case H2.
  case H2.
    apply IH to H3 H4. search.

Theorem reflexivity :
  forall A T L, ctx L -> {L |- wf A T} -> {L |- sub A T T}.
induction on 2. intros. case H2.
  apply no_wf_ctx to H1 H3. case H4.
  search.
  search.
  apply IH to H1 H3. apply IH to H1 H4. search.
  apply IH to H1 H3.
    apply IH to _ H4.
      search.

% Theorem transitivity :
%   forall A S Q T, {sub A S Q} -> {sub A Q T} -> {sub A S T}.

