Soon
====
Add 'exists'
    Add searching for exists goal
    Add apply IH when there is exists in the result
Add 'and'

Move things from prover to tactics if they use Tactics.foo

Larger or longer term issues
============================

Fix LLambda issue

Handle the context on induction and restrictions on case

Parse lambda prolog sig files
  Moreover, are we ever going to do something with all these types
  floating around?

Seperate parsers more?

Change OMakefile so exceptions print full stack trace? Is there a way
  to integrate this with OUnit?

Allow forall application with OR on the left

Add a show_lemmas command
Add 'abort'

Theorems for eval
=================

Determinancy of semantics:
  (Done) big step
  (Fail) one step - not LLambda
  (Fail) nstep - requires lemma on one-step

Equivalence of semantics
  (Fail) big step -> nstep - I think this requires a lemma about nstep/step
  (Fail) nstep -> big step - Not LLambda and requires lemma

Subject reduction
  (Done) big step
  (Fail) one step - not LLambda
  (Fail) nstep - probably requires lemma on one-step
