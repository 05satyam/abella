Soon
====
Need better parsing of contexts,
  Should distinguish between variables and terms

Contexts
  search should check context for answer
  search should require subcontext for hypothesis
  case should work on implications
  apply should instantiate one context with another
  case should look in context as a subcase


Fix rigid_path_check

Add equivariant unification

Where do we add raising over supp(T)?

Add support for linc predicates like ctxpair and neg

With support for contexts, do the cut elimination proof

With support for contexts and names,
     Dale's copy example
     Dale's normal example
     Dale's substitution example
     Cut elimination with forall quantifier

Add 'and'

Move things from prover to tactics if they use Tactics.foo

Larger or longer term issues
============================

Fix all substitution capture issues with replace_lppterm_vars
      "Replace should not capture exists variables" >::
        (fun () ->
           let t = exists ["A"] b in
           let t' = replace_lppterm_vars [("B", var_a)] t in
             assert_pprint_equal "exists A', {A}" t') ;

Handle the context on induction and restrictions on case

Use type information from sig files?

Seperate parsers more?

Change OMakefile so exceptions print full stack trace? Is there a way
  to integrate this with OUnit?

Allow forall application with OR on the left

Add a show_lemmas command
Add 'abort'

Add warning if using a capital name without it appearing in forall
  e.g. forall A, {rev A B} -> {rev B A}. should warn about B.
