Find and complete more examples
  Prove that copy with 2 eigen vars is the same as copy with 1 eigen var

Think about how to implement nominal unification

After Dale
==========
Add tests for raising in apply? How are we going to handle raising in
  apply?
Add test for apply to nabla variables

Remove case on {A => B}. We should never have that type of term.

Future
======

Check that TODO in unify.ml is sound

Add more bedwyr style searching?
  Watch timestamps more closely?
  Change not (try_left_unify ...) so unification errors (not failures)
    do not result in success

Display new hypotheses in future subgoals? (subgoal 2 is : {...} -> ...)
  
Case analysis on lg predicates should work differently than lp predicates

Do we have to consider logic variables in the context during search?

Add 'and' ?
  Would pollute namespace :-/

Fix rigid_path_check

Add unification over lppterms?
  If so then simplify search, case, and apply

Fix timestamp bug in unify that David has a test for

Support induction on linc predicates by assuming an implicit natural
  number argument. Then replace axioms with theorems in examples.

Larger or longer term issues
============================
Remove duplication between case analysis and searching?

Fix all substitution capture issues with replace_lppterm_vars
      "Replace should not capture exists variables" >::
        (fun () ->
           let t = exists ["A"] b in
           let t' = replace_lppterm_vars [("B", var_a)] t in
             assert_pprint_equal "exists A', {A}" t') ;

Use type information from sig files?

Change OMakefile so exceptions print full stack trace? Is there a way
  to integrate this with OUnit?

Add a show_lemmas command
Add an abort command

Add warning if using a capital name without it appearing in forall
  e.g. forall A, {rev A B} -> {rev B A}. should warn about B.
