Create extensions module which extends the standard libraries with
  missing functions. Look into using extlib also?
  Move uniq to list
  Move collect_some to list (rename it also)

Next week
=========

Add equivariant unification

Where do we add raising over supp(T)?

Automatically case on {pi x\ ...} ?
     Object instantiation should no longer need a pi then

Search should know how to deal with pi x\ ...

With support for contexts and names,
     Dale's copy example
     Dale's normal example
     Dale's substitution example
     Cut elimination with forall quantifier

     
Future
======

Add more bedwyr style searching?
  Watch timestamps more closely?
  Change not (try_left_unify ...) so unification errors (not failures)
    do not result in success

Case analysis on lg predicates should work differently than lp predicates

Do we have to consider logic variables in the context during search?
How does object cut work with contexts?

Add 'and' ?
  Would pollute namespace :-/

Fix rigid_path_check

Add unification over lppterms?
  If so then simplify search, case, and apply_forall

Make omake target that checks all thm files with their mod files

Make omakefile target for any mod/thm combination

Think about timestamps in the bedwyr style searching

Larger or longer term issues
============================
Remove duplication between case analysis and searching

Fix all substitution capture issues with replace_lppterm_vars
      "Replace should not capture exists variables" >::
        (fun () ->
           let t = exists ["A"] b in
           let t' = replace_lppterm_vars [("B", var_a)] t in
             assert_pprint_equal "exists A', {A}" t') ;

Use type information from sig files?

Seperate parsers more?

Change OMakefile so exceptions print full stack trace? Is there a way
  to integrate this with OUnit?

Add real support for non-interactive mode
  Halt on errors
  Echo commands

Add a show_lemmas command
Add 'abort'

Add warning if using a capital name without it appearing in forall
  e.g. forall A, {rev A B} -> {rev B A}. should warn about B.
