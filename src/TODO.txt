Find and complete more examples
  Prove that normal and non-normal are non-overlapping

A n = B is still picking a bad name

After Dale
==========
If not going to use timestamps, remove them from the system?

Add tests for raising in apply? How are we going to handle raising in
  apply?
Add test for apply to nabla variables

Future
======

Check that TODO in unify.ml is sound

Add more bedwyr style searching?
  Watch timestamps more closely?
  Change not (try_left_unify ...) so unification errors (not failures)
    do not result in success

Clarify failure vs error in unification

Display new hypotheses in future subgoals? (subgoal 2 is : {...} -> ...)
  
Clean up unify tests (exceptions, pprint)

Case analysis on lg predicates should work differently than lp predicates

Do we have to consider logic variables in the context during search?

Add 'and' ?
  Would pollute namespace :-/

Fix rigid_path_check

Add unification over lppterms?
  If so then simplify search, case, and apply

Fix timestamp bug in unify that David has a test for

Larger or longer term issues
============================
Remove duplication between case analysis and searching?

Fix all substitution capture issues with replace_lppterm_vars
      "Replace should not capture exists variables" >::
        (fun () ->
           let t = exists ["A"] b in
           let t' = replace_lppterm_vars [("B", var_a)] t in
             assert_pprint_equal "exists A', {A}" t') ;

Use type information from sig files?

Change OMakefile so exceptions print full stack trace? Is there a way
  to integrate this with OUnit?

Add a show_lemmas command
Add an abort command

Add warning if using a capital name without it appearing in forall
  e.g. forall A, {rev A B} -> {rev B A}. should warn about B.
