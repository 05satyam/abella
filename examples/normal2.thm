%% Proof that no lambda term is both normal and non-normal
%%
%% The ctx predicate defines the context of a judgement (normal T).

Def nabla x, name x.

Def ctx nil.
Def ctx (var X :: L) :- name X, ctx L.

Theorem ctx_var : forall L E,
  ctx L -> member E L -> exists X, E = var X /\ name X.
induction on 1. intros. case H1.
  case H2.
  case H2.
    search.
    apply IH to H4 H5. search.

Theorem ctx_name : forall L X,
  ctx L -> member (var X) L -> name X.
intros. apply ctx_var to H1 H2. case H3. search.

Theorem head_lemma : forall L T,
  ctx L -> {L |- normal_head T} -> {L |- normal T}.
intros. case H2.
  apply ctx_var to H1 H3. case H4.
  search.
  search.

Theorem generalized : forall T L,
  ctx L -> {L |- normal T} -> {non_normal T} -> false.
induction on 3. intros. case H2.
  apply ctx_var to H1 H4. case H5.
  case H3.
    apply IH to _ H4 H5. search.
  case H3.
    case H4.
      apply ctx_var to H1 H6. case H7.
      case H6. apply ctx_var to H1 H7. case H9. case H8.
    apply head_lemma to H1 H4.
      apply IH to H1 H7 H6. search.
    apply IH to H1 H5 H6. search.
  case H4.
    apply ctx_name to H1 H5. case H6. case H3.

Theorem specialized : forall T,
  {normal T} -> {non_normal T} -> false.
intros. apply generalized to _ H1 H2. search.
