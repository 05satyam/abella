%% Comparison between two definitions of arbitrary cascading substitutions

Define nabla x, name x.

Define nabla x, fresh x E.

Define ctx nil.
Define nabla x, ctx (pair x (V x) :: L) := ctx L.

Define subst1 nil T T.
Define nabla x, subst1 (pair x V :: L) (T x) T' := subst1 L (T V) T'.

Define subst2 L (app M N) (app M' N') := subst2 L M M' /\ subst2 L N N'.
Define subst2 L (abs M) (abs M') := nabla x, subst2 (pair x x :: L) (M x) (M' x).
Define subst2 (pair X V :: L) X V := name X.
Define subst2 (pair Y V :: L) X V' := fresh X Y /\ subst2 L X V'.
Define subst2 nil T T.

Theorem subst1_subst2 : forall L T T',
  ctx L -> subst1 L T T' -> subst2 L T T'.
skip.  

Theorem subst2_subst1 : forall L T T',
  ctx L -> subst2 L T T' -> subst1 L T T'.  
skip.
