Specification "typing".

Import "add".

Theorem of_tm_ext :
  (forall G M A, {of G M A} -> {tm M}) /\
  (forall G S G', {ofs G S G'} -> {sub S}).
induction on 1 1. split. intros. case H1.
search. search.
apply IH to H2. case H3. search.
apply IH to H3. apply IH1 to H2. search.
apply IH to H2. apply IH to H3. search.
apply IH to H3. search.
intros. case H1.
search.
apply IH1 to H2. case H3. search.
apply IH to H2. apply IH1 to H3. search.
apply IH1 to H2. apply IH1 to H3. search.

Split of_tm_ext as of_tm, ofs_sub.

Theorem lemma_of_var_shift : forall N1 N2 N3 G1 G2 A,
  {add N1 N2 N3} -> {ofs G1 (shift N1) G2} -> {of G2 (var N2) A} ->
    {of G1 (var N3) A}.
induction on 1. intros. case H1.
  case H2. search.
  case H2. apply IH to H4 H5 H3. search.

Theorem lemma_of_shift_shift : forall N1 N2 N3 G1 G2 G3,
  {add N1 N2 N3} -> {ofs G1 (shift N1) G2} -> {ofs G2 (shift N2) G3} ->
    {ofs G1 (shift N3) G3}.
induction on 1. intros. case H1.
  case H2. search.
  case H2. apply IH to H4 H5 H3. search.

Theorem of_step_ext :
  (forall G T M N A, {of G M A} -> {step T M N} -> {of G N A})
  /\
  (forall G T S S' G', {ofs G S G'} -> {steps T S S'} -> {ofs G S' G'}).
induction on 2 2. split.
  intros. case H2.
    case H1. apply IH to H5 H3. search.
    case H1. apply IH1 to H4 H3. search.
    case H1. apply IH to H4 H3. search.
    case H1. apply IH to H5 H3. search.
    case H1. apply IH to H5 H3. search.
    case H1. case H3. search.
    case H1. case H4. search.
    case H1. case H3. case H4. search.
    case H1. case H3. case H4. search.
    case H1. apply ofs_sub to H4. case H6.
      apply add_comm to _ H3. apply lemma_of_var_shift to H8 H4 H5. search.
    case H1. case H4. search.
    case H1. case H4. search.
    case H1. case H4. search 10.
  intros. case H2.
    case H1. apply IH to H4 H3. search.
    case H1. apply IH1 to H5 H3. search.
    case H1.
      assert forall G K, {of G (var K) A} -> {ofs G (shift (s K)) G'1} ->
          {ofs G (shift K) (cons G'1 A)}.
        induction on 1. intros.
        case H5.
          case H6. case H7. search.
          case H6. apply IH2 to H7 H8. search.
      apply H5 to H3 H4. search.
    case H1. apply IH1 to H5 H3. search.
    case H1. apply IH1 to H4 H3. search.
    case H1. case H4. search.
    case H1. case H4. search.
    case H1. case H3. case H4. search.
    case H1. apply ofs_sub to H4. case H6.
      apply add_comm to _ H3. apply lemma_of_shift_shift to H8 H4 H5. search.
    case H1. case H4. search.

Split of_step_ext as of_step, ofs_steps.

Theorem of_ty_ext :
  (forall G M A, {ctx G} -> {of G M A} -> {ty A}) /\
  (forall G S G', {ctx G} -> {ofs G S G'} -> {ctx G'}).
induction on 2 2. split.
  intros. case H2.
    search.
    case H1. search.
    case H1. apply IH to H4 H3. search.
    apply IH1 to H1 H3. apply IH to H5 H4. search.
    apply IH to H1 H3. case H5. search.
    apply IH to _ H4. search.
  intros. case H2.
    search.
    case H1. apply IH1 to H4 H3. search.
    apply IH to H1 H3. apply IH1 to H1 H4. search.
    apply IH1 to H1 H3. apply IH1 to H5 H4. search.

Split of_ty_ext as of_ty, ofs_ctx.


