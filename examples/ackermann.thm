%% Proof that the Ackermann function is total
%%
%% This is a very small example that requires nested inductions.

Define nat z.
Define nat (s X) := nat X.

Define ack z N (s N).
Define ack (s M) z R := ack M (s z) R.
Define ack (s M) (s N) R := exists R', ack (s M) N R' /\ ack M R' R.

Theorem ack_nat : forall M N R,
  nat M -> nat N -> ack M N R -> nat R.
induction on 3. intros. case H3.
  search.
  case H1. apply IH to _ _ H4. search.
  case H1. case H2.
    apply IH to _ _ H4. apply IH to _ _ H5. search.

Theorem ack_total : forall M N,
  nat M -> nat N -> exists R, ack M N R.
induction on 1. induction on 2. intros. case H1 (keep).
  search.
  case H2.
    apply IH to H3 _ with N = s z. search.
    apply IH1 to H1 H4. apply ack_nat to _ _ H5.
      apply IH to H3 H6. search.
